
<!doctype html>
   <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <a class="btn btn-navbar" data-target=".nav-collapse" data-toggle="collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <a style="margin-left: 20px; color: #3a87ad;" class="brand" href="/">graphicbaseball</a>
          <h4 style="margin-left: 400px; font-family: Helvetica Neue; font-weight: 400;  color: #3a87ad;" class="charttitle">Parallel Coordinates | 2012 Batters</h4>
        </div>
      </div>
    </div>
    

<title>Linking to SlickGrid</title>

<!-- SlickGrid -->
<link rel="stylesheet" href="slickgrid/slick.grid.css" type="text/css"/>
<link rel="stylesheet" href="slickgrid/css/smoothness/jquery-ui-1.8.16.custom.css" type="text/css"/>
<link rel="stylesheet" href="slickgrid/examples/examples.css" type="text/css"/>
<link rel="stylesheet" href="slickgrid/controls/slick.pager.css" type="text/css"/>
<script src="slickgrid/lib/jquery-1.7.min.js"></script>
<script src="slickgrid/lib/jquery.event.drag-2.0.min.js"></script>
<script src="slickgrid/slick.core.js"></script>
<script src="slickgrid/slick.grid.js"></script>
<script src="slickgrid/controls/slick.pager.js"></script>
<script src="slickgrid/slick.dataview.js"></script>
<!-- End SlickGrid -->

<link rel="stylesheet" type="text/css" href="d3/d3.parcoords.css">
<link rel="stylesheet" type="text/css" href="d3/style.css">
<style>
body, html {
  margin: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
  font-size: 12px;
}
.badge, .label {
  font-weight: normal;
}

#grid, #pager {
  position: fixed;
  width: 100%;
}
#grid {
  bottom: 0;
  height: 300px;
}
#pager {
  bottom: 306px;
  height: 20px;
  margin-top: 25px;
}
.slick-row:hover {
  font-weight: bold;
  color: #069;
}
footer
{
visibility:hidden;
}
</style>
<script src="d3/d3.v2.js"></script>
<script src="d3/d3.parcoords.js"></script>
<script src="d3/divgrid.js"></script>
<div id="example" class="parcoords" style="height:500px; margin-top:32px;"></div>
<div id="grid"></div>
<div id="pager"></div>
<script id="brushing">
// load csv file and create the chart
d3.csv('data/batting.csv', function(data) {
  // slickgrid needs each data element to have an id
  data.forEach(function(d,i) { d.id = d.id || i; });

  var parcoords = d3.parcoords()("#example")
    .data(data)
    .alpha(0.4)
    .mode("queue") // progressive rendering
    .height(d3.max([document.body.clientHeight-297, 200]))
    .margin({
      top: 36,
      left: 0,
      right: 0,
      bottom: 40
    })
    .render()
    .reorderable()
    .brushable();

  // setting up grid
  var column_keys = d3.keys(data[0]);
  var columns = column_keys.map(function(key,i) {
    return {
      id: key,
      name: key,
      field: key,
      sortable: true
    }
  });

  var options = {
    enableCellNavigation: true,
    enableColumnReorder: false,
    multiColumnSort: false,
    forceFitColumns: false
  };

  var dataView = new Slick.Data.DataView();
  var grid = new Slick.Grid("#grid", dataView, columns, options);
  //var pager = new Slick.Controls.Pager(dataView, grid, $("#pager"));

  // wire up model events to drive the grid
  dataView.onRowCountChanged.subscribe(function (e, args) {
    grid.updateRowCount();
    grid.render();
  });

  dataView.onRowsChanged.subscribe(function (e, args) {
    grid.invalidateRows(args.rows);
    grid.render();
  });

  // column sorting
  var sortcol = column_keys[0];
  var sortdir = 1;

  function comparer(a, b) {
    var x = a[sortcol], y = b[sortcol];
    return (x == y ? 0 : (x > y ? 1 : -1));
  }
  
  // click header to sort grid column
  grid.onSort.subscribe(function (e, args) {
    sortdir = args.sortAsc ? 1 : -1;
    sortcol = args.sortCol.field;

    if ($.browser.msie && $.browser.version <= 8) {
      dataView.fastSort(sortcol, args.sortAsc);
    } else {
      dataView.sort(comparer, args.sortAsc);
    }
  });

  // highlight row in chart
  grid.onMouseEnter.subscribe(function(e,args) {
    var i = grid.getCellFromEvent(e).row;
    var d = parcoords.brushed() || data;
    parcoords.highlight([d[i]]);
  });
  grid.onMouseLeave.subscribe(function(e,args) {
    parcoords.unhighlight();
  });

  // fill grid with data
  gridUpdate(data);

  // update grid on brush
  parcoords.on("brush", function(d) {
    gridUpdate(d);
  });

  function gridUpdate(data) {
    dataView.beginUpdate();
    dataView.setItems(data);
    dataView.endUpdate();
  };

});
</script>
